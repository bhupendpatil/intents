---
# Available intents and slot combinations.
# Format:
#
# <intent name>:
#   supported: true if the intent is supported in Home Assistant.
#   domain: entity domain that this intent applies to.
#   description: "Description of the intent"
#   slots:
#     <slot name>:
#       description: "Description of slot"
#       required: true if slot is required by intent
#   slot_combinations:
#     <slot combination name>:
#       importance: "required" (bare minimum),
#                   "usable" (expected by users),
#                   "complete" (needed for 100% coverage),
#                   "optional" (extra, not needed for 100% coverage)
#       slots: [], list of slot names that are required.
#       example: "English example of voice command"
#       context_area: true if the area of the voice satellite is required.
#       inferred_domain: "<domain>", domain inferred by sentence like "cover" for "open the windows".
#       name_domains: [], list of domain names for entities matching {name}.

# -----------------------------------------------------------------------------
# homeassistant
# -----------------------------------------------------------------------------

HassTurnOn:
  supported: true
  domain: homeassistant
  description: "Turns on a device or entity"
  importance: "required"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    domain:
      description: "Domain of devices/entities in an area"
      required: false
    device_class:
      description: "Device class of devices/entities in an area"
      required: false
  slot_combinations:
    # -------------------------------------------------------------------------
    # Required slot combinations
    # -------------------------------------------------------------------------

    domain_light:
      description: "Turns on the lights in the voice satellite's area"
      importance: "required"
      slots:
        - "domain"
      context_area: true
      inferred_domain: "light"
      example: "turn on the lights in here"

    # -------------------------------------------------------------------------

    name_only:
      description: "Turns on a device by name"
      importance: "required"
      slots:
        - "name"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn on the overhead light"

    # -------------------------------------------------------------------------

    name_cover:
      description: "Opens a cover by name"
      importance: "required"
      slots:
        - "name"
      name_domains:
        - "cover"
      example: "open the sliding door"

    # -------------------------------------------------------------------------

    area_domain_light:
      description: "Turns on all the lights in an area"
      importance: "required"
      slots:
        - "area"
        - "domain"
      inferred_domain: "light"
      example: "turn on the lights in the kitchen"

    # -------------------------------------------------------------------------
    # Optional slot combinations
    # -------------------------------------------------------------------------

    domain_fan:
      description: "Turn on the fans in the voice satellite's area"
      importance: "optional"
      slots:
        - "domain"
      context_area: true
      inferred_domain: "fan"
      example: "turn on the fans in here"

    # -------------------------------------------------------------------------

    device_class_cover:
      description: "Open the covers in the voice satellite's area by device class"
      important: "complete"
      slots:
        - "domain"
        - "device_class"
      context_area: true
      inferred_domain: "cover"
      example: "open the windows in here"

    # -------------------------------------------------------------------------

    name_area:
      description: "Turns on a device in an area by name"
      important: "complete"
      slots:
        - "name"
        - "area"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn on the overhead light in the kitchen"

    # -------------------------------------------------------------------------

    name_area_cover:
      description: "Open a cover in an area by name"
      important: "complete"
      slots:
        - "name"
        - "area"
      name_domains:
        - "cover"
      example: "open the sliding door in the kitchen"

    # -------------------------------------------------------------------------

    name_floor:
      description: "Turn on a device on a floor by name"
      importance: "optional"
      slots:
        - "name"
        - "floor"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn on the overhead light on the first floor"

    # -------------------------------------------------------------------------

    name_script:
      description: "Run a script by name"
      important: "complete"
      slots:
        - "name"
      name_domains:
        - "script"
      example: "run party time script"

    # -------------------------------------------------------------------------

    name_scene:
      description: "Activate a scene by name"
      important: "complete"
      slots:
        - "name"
      name_domains:
        - "scene"
      example: "activate mood lighting scene"

    # -------------------------------------------------------------------------

    name_lock:
      description: "Lock a lock by name"
      important: "complete"
      slots:
        - "name"
      name_domains:
        - "lock"
      example: "lock front door"

    # -------------------------------------------------------------------------

    area_device_class_cover:
      description: "Open the covers in an area by device class"
      important: "complete"
      slots:
        - "area"
        - "domain"
        - "device_class"
      inferred_domain: "cover"
      example: "open the curtains in the living room"

    # -------------------------------------------------------------------------

    area_domain_fan:
      description: "Turn on all the fans in an area"
      importance: "optional"
      slots:
        - "area"
        - "domain"
      inferred_domain: "fan"
      example: "turn on the fans in the kitchen"

    # -------------------------------------------------------------------------

    floor_domain_light:
      description: "Turn on all the lights on a floor"
      importance: "optional"
      slots:
        - "floor"
        - "domain"
      inferred_domain: "light"
      example: "turn on the lights on the first floor"

    # -------------------------------------------------------------------------

    floor_device_class_cover:
      description: "Open all the covers on a floor by device class"
      importance: "optional"
      slots:
        - "floor"
        - "domain"
        - "device_class"
      inferred_domain: "cover"
      example: "open the curtains on the first floor"

# -----------------------------------------------------------------------------

HassTurnOff:
  supported: true
  domain: homeassistant
  description: "Turns off a device or entity"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    domain:
      description: "Domain of devices/entities in an area"
      required: false
    device_class:
      description: "Device class of devices/entities in an area"
      required: false
  slot_combinations:
    # -------------------------------------------------------------------------
    # Required slot combinations
    # -------------------------------------------------------------------------

    domain_light:
      description: "Turns off the lights in the voice satellite's area"
      importance: "required"
      slots:
        - "domain"
      context_area: true
      inferred_domain: "light"
      example: "turn off the lights in here"

    # -------------------------------------------------------------------------

    name_only:
      description: "Turns off a device by name"
      importance: "required"
      slots:
        - "name"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn off the overhead light"

    # -------------------------------------------------------------------------

    name_cover:
      description: "Closes a cover by name"
      importance: "required"
      slots:
        - "name"
      name_domains:
        - "cover"
      example: "close the sliding door"

    # -------------------------------------------------------------------------

    area_domain_light:
      description: "Turns off all the lights in an area"
      importance: "required"
      slots:
        - "area"
        - "domain"
      inferred_domain: "light"
      example: "turn off the lights in the kitchen"

    # -------------------------------------------------------------------------
    # Optional slot combinations
    # -------------------------------------------------------------------------

    domain_fan:
      description: "Turn off the fans in the voice satellite's area"
      importance: "optional"
      slots:
        - "domain"
      context_area: true
      inferred_domain: "fan"
      example: "turn off the fans in here"

    # -------------------------------------------------------------------------

    device_class_cover:
      description: "Close the covers in the voice satellite's area by device class"
      important: "complete"
      slots:
        - "domain"
        - "device_class"
      context_area: true
      inferred_domain: "cover"
      example: "close the windows in here"

    # -------------------------------------------------------------------------

    name_area:
      description: "Turns off a device in an area by name"
      important: "complete"
      slots:
        - "name"
        - "area"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn off the overhead light in the kitchen"

    # -------------------------------------------------------------------------

    name_area_cover:
      description: "Close a cover in an area by name"
      important: "complete"
      slots:
        - "name"
        - "area"
      name_domains:
        - "cover"
      example: "close the sliding door in the kitchen"

    # -------------------------------------------------------------------------

    name_floor:
      description: "Turn off a device on a floor by name"
      importance: "optional"
      slots:
        - "name"
        - "floor"
      name_domains:
        - "light"
        - "switch"
        - "fan"
        - "media_player"
        - "input_boolean"
      example: "turn off the overhead light on the first floor"

    # -------------------------------------------------------------------------

    name_lock:
      description: "Unlock a lock by name"
      important: "complete"
      slots:
        - "name"
      name_domains:
        - "lock"
      example: "unlock front door"

    # -------------------------------------------------------------------------

    area_device_class_cover:
      description: "Close the covers in an area by device class"
      important: "complete"
      slots:
        - "area"
        - "domain"
        - "device_class"
      inferred_domain: "cover"
      example: "close the curtains in the living room"

    # -------------------------------------------------------------------------

    area_domain_fan:
      description: "Turn off all the fans in an area"
      importance: "optional"
      slots:
        - "area"
        - "domain"
      inferred_domain: "fan"
      example: "turn off the fans in the kitchen"

    # -------------------------------------------------------------------------

    floor_domain_light:
      description: "Turn off all the lights on a floor"
      importance: "optional"
      slots:
        - "floor"
        - "domain"
      inferred_domain: "light"
      example: "turn off the lights on the first floor"

    # -------------------------------------------------------------------------

    floor_device_class_cover:
      description: "Close all the covers on a floor by device class"
      importance: "optional"
      slots:
        - "floor"
        - "domain"
        - "device_class"
      inferred_domain: "cover"
      example: "close the curtains on the first floor"

    # -------------------------------------------------------------------------

    domain_all_lights:
      description: "Turn off all the lights in the house"
      importance: "optional"
      slots:
        - "domain"
      context_area: false
      inferred_domain: "light"
      example: "turn off all the lights in the house"

# -----------------------------------------------------------------------------

HassGetState:
  supported: true
  domain: homeassistant
  description: "Gets or checks the state of an entity"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    domain:
      description: "Domain of devices/entities in an area"
      required: false
    device_class:
      description: "Device class of devices/entities in an area"
      required: false
    state:
      description: "Name of state to match"
      required: false
  response_variables:
    state:
      description: "State of the first entity matched"
    query.matched:
      description: "List of states that matched the query and state name"
    query.unmatched:
      description: "List of states that matched everything except state name"
  slot_combinations:
    - slots: "name"
      importance: "required"
      domain: "sensor"
      example: "what is the value of sensor 1"
    - slots:
        - "name"
        - "area"
      importance: "complete"
      example: "what is the value of sensor 1 in the kitchen"
    - slots:
        - "name"
        - "floor"
      importance: "complete"
      example: "what is the value of sensor 1 on the first floor"
    - slots:
        - "state"
        - "domain"
      importance: "optional"
      example: "are there any lights on"
    - slots:
        - "state"
        - "domain"
        - "area"
      importance: "optional"
      example: "are there any lights on in the kitchen"
    - slots:
        - "state"
        - "domain"
        - "floor"
      importance: "optional"
      example: "are there any lights on upstairs"
    - slots:
        - "state"
        - "device_class"
        - "domain"
      importance: "optional"
      example: "are any batteries charging"
    - slots:
        - "state"
        - "device_class"
        - "domain"
        - "area"
      importance: "optional"
      example: "are any batteries charging in the garage"
    - slots:
        - "state"
        - "device_class"
        - "domain"
        - "floor"
      importance: "optional"
      example: "are any batteries charging in the basement"

# -----------------------------------------------------------------------------

HassNevermind:
  supported: true
  domain: homeassistant
  description: "Does nothing. Used to cancel a request"
  slot_combinations:
    default:
      description: "Cancels the current request"
      importance: "required"
      slots: []
      example: "nevermind"

# -----------------------------------------------------------------------------

HassRespond:
  supported: true
  domain: homeassistant
  description: "Returns response but takes no action"
  slots:
    response:
      description: "Text to respond with"
      required: false
  slot_combinations:
    default:
      description: "Return hard-coded response"
      importance: "optional"
      slots: []
      example: "hello"

# -----------------------------------------------------------------------------

HassBroadcast:
  supported: true
  domain: assist_satellite
  description: "Announces a message on other satellites"
  importance: "optional"
  slots:
    message:
      description: "Message to broadcast"
      required: true
  slot_combinations:
    message_only:
      description: "Broadcast a message to all other satellites"
      importance: "optional"
      slots:
        - "message"
      example: "broadcast that dinner is ready"

# -----------------------------------------------------------------------------

HassSetPosition:
  supported: true
  domain: homeassistant
  description: "Sets the position of an entity"
  importance: "complete"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    domain:
      description: "Domain of devices/entities in an area"
      required: false
    device_class:
      description: "Device class of devices/entities in an area"
      required: false
    position:
      description: "Position from 0 to 100"
      required: true
  slot_combinations:
    - slots:
        - "name"
        - "position"
      importance: "complete"
      example: "set curtain left to 50%"
    - slots:
        - "area"
        - "domain"
        - "position"
      importance: "complete"
      example: "set kitchen valves to 50%"
    - slots:
        - "area"
        - "domain"
        - "device_class"
        - "position"
      importance: "complete"
      example: "set living room shades to 50%"
    - slots:
        - "floor"
        - "domain"
        - "device_class"
        - "position"
      importance: "complete"
      example: "set main floor shades to 50%"
    - slots:
        - "floor"
        - "domain"
        - "position"
      importance: "complete"
      example: "set main floor valves to 50%"
    - slots:
        - "domain"
        - "device_class"
        - "position"
      importance: "complete"
      example: "set all curtains to 50%"

# -----------------------------------------------------------------------------

HassGetCurrentDate:
  supported: true
  domain: homeassistant
  description: "Gets the current date"
  slot_combinations:
    default:
      description: "Gets the current date"
      importance: "usable"
      slots: []
      example: "what is the date"
  response_variables:
    date:
      description: "Date object with day, month, and year"

# -----------------------------------------------------------------------------

HassGetCurrentTime:
  supported: true
  domain: homeassistant
  description: "Gets the current time"
  slot_combinations:
    default:
      description: "Get the current weather"
      importance: "usable"
      slots: []
      example: "what time is it"
  response_variables:
    time:
      description: "Time object with hours, minutes, and seconds"

# -----------------------------------------------------------------------------
# light
# -----------------------------------------------------------------------------

HassLightSet:
  supported: true
  domain: light
  description: "Sets the brightness or color of a light"
  importance: "usable"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    brightness:
      description: "Brightness percentage from 0 to 100"
      required: false
    color:
      description: "Name of color"
      required: false
  slot_combinations:
    # brightness
    - slots:
        - "brightness"
      context_area: true
      importance: "usable"
      example: "set the brightness in here to 50%"
    - slots:
        - "name"
        - "brightness"
      importance: "usable"
      example: "set the overhead light brightness to 50%"
    - slots:
        - "area"
        - "brightness"
      importance: "usable"
      example: "set the living room brightness to 50%"
    - slots:
        - "floor"
        - "brightness"
      importance: "complete"
      example: "set the main floor brightness to 50%"
    # color
    - slots:
        - "color"
      context_area: true
      importance: "usable"
      example: "set the lights in here to red"
    - slots:
        - "name"
        - "color"
      importance: "usable"
      example: "set the overhead light to red"
    - slots:
        - "area"
        - "color"
      importance: "usable"
      example: "set the living room to red"
    - slots:
        - "floor"
        - "color"
      importance: "complete"
      example: "set the main floor to red"

# -----------------------------------------------------------------------------
# climate
# -----------------------------------------------------------------------------

HassClimateSetTemperature:
  supported: true
  domain: climate
  description: "Sets the desired temperature of a climate device or entity"
  importance: "complete"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
    temperature:
      description: "Temperature in degrees"
      required: true
  slot_combinations:
    - slots: "temperature"
      importance: "complete"
      example: "set the temperature to 30 degrees"
    - slots:
        - "name"
        - "temperature"
      importance: "complete"
      example: "set the EcoBee to 30 degrees"
    - slots:
        - "area"
        - "temperature"
      importance: "complete"
      example: "set the bedroom temperature to 30 degrees"
    - slots:
        - "floor"
        - "temperature"
      importance: "complete"
      example: "set the temperature of the main floor to 30 degrees"

# -----------------------------------------------------------------------------

HassClimateGetTemperature:
  supported: true
  domain: climate
  description: "Gets the current temperature of a climate device or entity"
  importance: "usable"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
  slot_combinations:
    - slots: []
      context_area: true
      importance: "usable"
      example: "what is the temperature"
    - slots: "name"
      importance: "usable"
      example: "what is the temperature of the EcoBee"
    - slots: "area"
      importance: "usable"
      example: "what is the temperature in the bedroom"
    - slots: "floor"
      importance: "usable"
      example: "what is the temperature downstairs"
  response_variables:
    state:
      description: "State of the entity that contains the temperature"

# -----------------------------------------------------------------------------
# shopping_list
# -----------------------------------------------------------------------------

HassShoppingListAddItem:
  supported: true
  domain: shopping_list
  description: "Adds an item to the shopping list"
  slots:
    item:
      description: "Item to add"
      required: true
  slot_combinations:
    item_only:
      description: "Adds an item to the shopping list"
      importance: "optional"
      slots: "item"
      example: "add apples to my shopping list"

# -----------------------------------------------------------------------------

HassShoppingListCompleteItem:
  supported: false
  domain: shopping_list
  description: "Checks off an item from the shopping list"
  slots:
    item:
      description: "Item to check off"
      required: true
  slot_combinations:
    item_only:
      description: "Checks off an item from the shopping list"
      importance: "optional" # change to complete after 2025-07-01
      slots: "item"
      example: "check off apples from my shopping list"

# -----------------------------------------------------------------------------
# weather
# -----------------------------------------------------------------------------

HassGetWeather:
  supported: true
  domain: weather
  description: "Gets the current weather"
  slots:
    name:
      description: "Name of the weather entity to use"
      required: false
  slot_combinations:
    default:
      description: "Get the current weather"
      importance: "usable"
      slots: []
      example: "what is the weather"

    # -------------------------------------------------------------------------

    name_only:
      description: "Get the current weather by name"
      importance: "usable"
      slots:
        - "name"
      name_domains:
        - "weather"
      example: "what is the weather in New York"
  response_variables:
    state:
      description: "State of the entity that contains the weather"

# -----------------------------------------------------------------------------
# todo
# -----------------------------------------------------------------------------

HassListAddItem:
  supported: true
  domain: todo
  description: "Adds an item to a todo list"
  slots:
    item:
      description: "Item to add"
      required: true
    name:
      description: "Name of the list"
      required: true
  slot_combinations:
    name_item:
      description: "Adds an item to a todo list"
      importance: "complete"
      slots:
        - "item"
        - "name"
      name_domains:
        - "todo"
      example: "add apples to my shopping list"

# -----------------------------------------------------------------------------

HassListCompleteItem:
  supported: false
  domain: todo
  description: "Checks off an item from a todo list"
  slots:
    item:
      description: "Item to check off"
      required: true
    name:
      description: "Name of the list"
      required: true
  slot_combinations:
    name_item:
      description: "Checks off an item from a todo list"
      importance: "optional" # change to complete after 2025-07-01
      slots:
        - "item"
        - "name"
      name_domains:
        - "name"
      example: "check off take out the trash from my chores list"

# -----------------------------------------------------------------------------
# vacuum
# -----------------------------------------------------------------------------

HassVacuumStart:
  supported: true
  domain: vacuum
  description: "Starts a vacuum"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    floor:
      description: "Name of a floor"
      required: false
  slot_combinations:
    name_only:
      description: "Starts a vacuum by name"
      importance: "complete"
      slots:
        - "name"
      name_domains:
        - "vacuum"
      example: "start rover"

    # -------------------------------------------------------------------------

    area_only:
      description: "Starts a vacuum in an area"
      importance: "complete"
      slots:
        - "area"
      example: "vacuum the kitchen"

    # -------------------------------------------------------------------------

    floor_only:
      description: "Starts a vacuum on a floor"
      importance: "complete"
      slots:
        - "floor"
      example: "vacuum the main floor"

# -----------------------------------------------------------------------------

HassVacuumReturnToBase:
  supported: true
  domain: vacuum
  description: "Returns a vacuum to base"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
  slot_combinations:
    name_only:
      description: "Returns a vacuum to base by name"
      importance: "complete"
      slots:
        - "name"
      name_domains:
        - "vacuum"
      example: "return rover to base"

    # -------------------------------------------------------------------------

    area_only:
      description: "Returns a vacuum in an area to base"
      importance: "complete"
      slots:
        - "area"
      example: "return kitchen vacuum to base"

# -----------------------------------------------------------------------------
# media_player
# -----------------------------------------------------------------------------

HassMediaPause:
  supported: true
  domain: media_player
  description: "Pauses a media player"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
  slot_combinations:
    default:
      description: "Pause the media player that's currently playing"
      importance: "usable"
      slots: []
      context_area: true
      example: "pause"

    # -------------------------------------------------------------------------

    name_only:
      description: "Pause a media player by name"
      importance: "usable"
      slots:
        - "name"
      name_domains:
        - "media_player"
      example: "pause TV"

    # -------------------------------------------------------------------------

    area_only:
      description: "Pause the media player in an area that's currently playing"
      importance: "usable"
      slots:
        - "area"
      example: "pause music in kitchen"

# -----------------------------------------------------------------------------

HassMediaUnpause:
  supported: true
  domain: media_player
  description: "Unpauses a media player"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
  slot_combinations:
    default:
      description: "Resume the media player that's currently paused"
      importance: "usable"
      slots: []
      context_area: true
      example: "resume"

    # -------------------------------------------------------------------------

    name_only:
      description: "Resume a media player by name"
      importance: "usable"
      slots:
        - "name"
      name_domains:
        - "media_player"
      example: "resume TV"

    # -------------------------------------------------------------------------

    area_only:
      description: "Resume the media player in an area that's currently playing"
      importance: "usable"
      slots:
        - "area"
      example: "resume music in kitchen"

# -----------------------------------------------------------------------------

HassMediaNext:
  supported: true
  domain: media_player
  description: "Skips a media player to the next item"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
  slot_combinations:
    default:
      description: "Skip to the next item on the media player that's currently playing"
      importance: "usable"
      slots: []
      context_area: true
      example: "next track"

    # -------------------------------------------------------------------------

    name_only:
      description: "Skip to the next item on a media player by name"
      importance: "usable"
      slots:
        - "name"
      name_domains:
        - "media_player"
      example: "next track on the stereo"

    # -------------------------------------------------------------------------

    area_only:
      description: "Skip to the next item on the media player in an area that's currently playing"
      importance: "usable"
      slots:
        - "area"
      example: "next track in the kitchen"

# -----------------------------------------------------------------------------

HassMediaPrevious:
  supported: true
  domain: media_player
  description: "Skips a media player back to the previous item"
  importance: "complete"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
  slot_combinations:
    default:
      description: "Skip to the previous item on the media player that's currently playing"
      importance: "complete"
      slots: []
      context_area: true
      example: "previous track"

    # -------------------------------------------------------------------------

    name_only:
      description: "Skip to the previous item on a media player by name"
      importance: "complete"
      slots:
        - "name"
      name_domains:
        - "media_player"
      example: "previous track on the stereo"

    # -------------------------------------------------------------------------

    area_only:
      description: "Skip to the previous item on the media player in an area that's currently playing"
      importance: "complete"
      slots:
        - "area"
      example: "previous track in the kitchen"

# -----------------------------------------------------------------------------

HassSetVolume:
  supported: true
  domain: media_player
  description: "Sets the volume of a media player"
  slots:
    name:
      description: "Name of a device or entity"
      required: false
    area:
      description: "Name of an area"
      required: false
    volume_level:
      description: "Volume level from 0 to 100"
      required: true
  slot_combinations:
    default:
      description: "Set the volume of the currently playing media player"
      importance: "complete"
      slots: []
      context_area: true
      example: "set volume to 50%"

    # -------------------------------------------------------------------------

    name_only:
      description: "Set the volume of a media player by name"
      importance: "complete"
      slots:
        - "name"
      name_domains:
        - "media_player"
      example: "set TV volume to 50%"

    # -------------------------------------------------------------------------

    area_only:
      description: "Set the volume of the currently playing media player in an area"
      importance: "complete"
      slots:
        - "area"
      example: "set volume in kitchen to 50%"

# -----------------------------------------------------------------------------
# timers
# -----------------------------------------------------------------------------

HassStartTimer:
  supported: true
  domain: homeassistant
  description: "Starts a timer"
  slots:
    hours:
      description: "Number of hours"
      required: false
    minutes:
      description: "Number of minutes"
      required: false
    seconds:
      description: "Number of seconds"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    conversation_command:
      description: "Command to execute when timer finishes"
      required: false
  slot_combinations:
    # -------------------------------------------------------------------------
    # Usable slot combinations
    # -------------------------------------------------------------------------

    hours_only:
      description: "Start a timer for a duration of hours"
      importance: "usable"
      slots:
        - "hours"
      example: "set a timer for 1 hour"

    # -------------------------------------------------------------------------

    minutes_only:
      description: "Start a timer for a duration of minutes"
      importance: "usable"
      slots:
        - "minutes"
      example: "set a timer for 10 minutes"

    # -------------------------------------------------------------------------

    seconds_only:
      description: "Start a timer for a duration of seconds"
      importance: "usable"
      slots:
        - "seconds"
      example: "set a timer for 30 seconds"

    # -------------------------------------------------------------------------
    # Optional slot combinations
    # -------------------------------------------------------------------------

    hours_minutes:
      description: "Start a timer for a duration of hours and minutes"
      importance: "complete"
      slots:
        - "hours"
        - "minutes"
      example: "set a timer for 1 hour and 10 minutes"

    # -------------------------------------------------------------------------

    hours_seconds:
      description: "Start a timer for a duration of hours and seconds"
      importance: "complete"
      slots:
        - "hours"
        - "seconds"
      example: "set a timer for 1 hour and 30 seconds"

    # -------------------------------------------------------------------------

    minutes_seconds:
      description: "Start a timer for a duration of minutes and seconds"
      importance: "complete"
      slots:
        - "minutes"
        - "seconds"
      example: "set a timer for 10 minutes and 30 seconds"

    # -------------------------------------------------------------------------

    hours_minutes_seconds:
      description: "Start a timer for a duration of hours, minutes, and seconds"
      importance: "complete"
      slots:
        - "hours"
        - "minutes"
        - "seconds"
      example: "set a timer for 1 hour and 10 minutes and 30 seconds"

    # -------------------------------------------------------------------------
    # name
    # -------------------------------------------------------------------------

    name_hours:
      description: "Start a timer with a name for a duration of hours"
      importance: "complete"
      slots:
        - "name"
        - "hours"
      example: "set a timer for 1 hour named pizza"

    # -------------------------------------------------------------------------

    name_minutes:
      description: "Start a timer with a name for a duration of minutes"
      importance: "complete"
      slots:
        - "name"
        - "minutes"
      example: "set a timer for 10 minutes named pizza"

    # -------------------------------------------------------------------------

    name_seconds:
      description: "Start a timer with a name for a duration of seconds"
      importance: "complete"
      slots:
        - "name"
        - "seconds"
      example: "set a timer for 30 seconds named pizza"

    # -------------------------------------------------------------------------

    name_hours_minutes:
      description: "Start a timer with a name for a duration of hours and minutes"
      importance: "complete"
      slots:
        - "name"
        - "hours"
        - "minutes"
      example: "set a timer for 1 hour and 10 minutes named pizza"

    # -------------------------------------------------------------------------

    name_hours_seconds:
      description: "Start a timer with a name for a duration of hours and seconds"
      importance: "complete"
      slots:
        - "name"
        - "hours"
        - "seconds"
      example: "set a timer for 1 hour and 30 seconds named pizza"

    # -------------------------------------------------------------------------

    name_minutes_seconds:
      description: "Start a timer with a name for a duration of minutes and seconds"
      importance: "complete"
      slots:
        - "name"
        - "minutes"
        - "seconds"
      example: "set a timer for 10 minutes and 30 seconds named pizza"

    # -------------------------------------------------------------------------

    name_hours_minutes_seconds:
      description: "Start a timer with a name for a duration of hours, minutes, and seconds"
      importance: "complete"
      slots:
        - "name"
        - "hours"
        - "minutes"
        - "seconds"
      example: "set a timer for 1 hour and 10 minutes and 30 seconds named pizza"

    # -------------------------------------------------------------------------
    # conversation_command
    # -------------------------------------------------------------------------

    command_hours:
      description: "Execute a command after a duration of hours"
      importance: "optional"
      slots:
        - "conversation_command"
        - "hours"
      example: "turn off the lights in 1 hour"

    # -------------------------------------------------------------------------

    command_minutes:
      description: "Execute a command after a duration of minutes"
      importance: "optional"
      slots:
        - "conversation_command"
        - "minutes"
      example: "turn off the lights in 10 minutes"

    # -------------------------------------------------------------------------

    command_seconds:
      description: "Execute a command after a duration of seconds"
      importance: "optional"
      slots:
        - "conversation_command"
        - "seconds"
      example: "turn off the lights in 30 seconds"

    # -------------------------------------------------------------------------

    command_hours_minutes:
      description: "Execute a command after a duration of hours and minutes"
      importance: "optional"
      slots:
        - "conversation_command"
        - "hours"
        - "minutes"
      example: "turn off the lights in 1 hour and 10 minutes"

    # -------------------------------------------------------------------------

    command_hours_seconds:
      description: "Execute a command after a duration of hours and seconds"
      importance: "optional"
      slots:
        - "conversation_command"
        - "hours"
        - "seconds"
      example: "turn off the lights in 1 hour and 30 seconds"

    # -------------------------------------------------------------------------

    command_minutes_seconds:
      description: "Execute a command after a duration of minutes and seconds"
      importance: "optional"
      slots:
        - "conversation_command"
        - "minutes"
        - "seconds"
      example: "turn off the lights in 10 minutes and 30 seconds"

    # -------------------------------------------------------------------------

    command_hours_minutes_seconds:
      description: "Execute a command after a duration of hours, minutes, and seconds"
      importance: "optional"
      slots:
        - "conversation_command"
        - "hours"
        - "minutes"
        - "seconds"
      example: "turn off the lights in 1 hour and 10 minutes and 30 seconds"

# -----------------------------------------------------------------------------

HassCancelAllTimers:
  supported: true
  domain: homeassistant
  description: "Cancels all timers"
  slots:
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    default:
      description: "Cancels all timers"
      importance: "usable"
      slots: []
      example: "cancel all timers"

    # -------------------------------------------------------------------------

    area_only:
      description: "Cancels all timers in an area"
      importance: "complete"
      slots:
        - "area"
      example: "cancel all timers in the kitchen"

# -----------------------------------------------------------------------------

HassCancelTimer:
  supported: true
  domain: homeassistant
  description: "Cancels a timer"
  importance: "usable"
  slots:
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    # -------------------------------------------------------------------------
    # Usable slot combinations
    # -------------------------------------------------------------------------

    default:
      description: "Cancels the most recent timer"
      importance: "usable"
      slots: []
      example: "cancel my timer"

    # -------------------------------------------------------------------------
    # Optional slot combinations
    # -------------------------------------------------------------------------

    name_only:
      description: "Cancels a timer by name"
      importance: "complete"
      slots:
        - "name"
      name_domains: [] # voice timers are not HA entities
      example: "cancel the pizza timer"

    # -------------------------------------------------------------------------

    area_only:
      description: "Cancels the most recent timer in an area"
      importance: "complete"
      slots:
        - "area"
      example: "cancel the kitchen timer"

    # -------------------------------------------------------------------------

    hours_only:
      description: "Cancels a timer originally set for a duration of hours"
      importance: "usable"
      slots:
        - "start_hours"
      example: "cancel the 1 hour timer"

    # -------------------------------------------------------------------------

    minutes_only:
      description: "Cancels a timer originally set for a duration of minutes"
      importance: "usable"
      slots:
        - "start_minutes"
      example: "cancel the 10 minute timer"

    # -------------------------------------------------------------------------

    seconds_only:
      description: "Cancels a timer originally set for a duration of seconds"
      importance: "usable"
      slots:
        - "start_seconds"
      example: "cancel the 30 second timer"

    # -------------------------------------------------------------------------

    minutes_seconds:
      description: "Cancels a timer originally set for a duration of minutes and seconds"
      importance: "complete"
      slots:
        - "start_minutes"
        - "start_seconds"
      example: "cancel the 10 minutes and 30 seconds timer"

    # -------------------------------------------------------------------------

    hours_minutes:
      description: "Cancels a timer originally set for a duration of hours and minutes"
      importance: "complete"
      slots:
        - "start_hours"
        - "start_minutes"
      example: "cancel the 1 hour and 10 minutes timer"

    # -------------------------------------------------------------------------

    hours_seconds:
      description: "Cancels a timer originally set for a duration of hours and seconds"
      importance: "complete"
      slots:
        - "start_hours"
        - "start_seconds"
      example: "cancel the 1 hour and 30 seconds timer"

    # -------------------------------------------------------------------------

    hours_minutes_seconds:
      description: "Cancels a timer originally set for a duration of hours, minutes, and seconds"
      importance: "complete"
      slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
      example: "cancel the 1 hour and 10 minutes and 30 seconds timer"

# -----------------------------------------------------------------------------

HassIncreaseTimer:
  supported: true
  domain: homeassistant
  description: "Adds time to a timer"
  importance: "complete"
  slots:
    hours:
      description: "Number of hours"
      required: false
    minutes:
      description: "Number of minutes"
      required: false
    seconds:
      description: "Number of seconds"
      required: false
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    - slots: "hours"
      importance: "complete"
      example: "add 1 hour to my timer"
    - slots: "minutes"
      importance: "complete"
      example: "add 10 minutes to my timer"
    - slots: "seconds"
      importance: "complete"
      example: "add 30 seconds to my timer"
    - slots:
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to my timer"
    - slots:
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to my timer"
    - slots:
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to my timer"
    - slots:
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 10 minutes and 30 seconds to my timer"
    # name
    - slots:
        - "name"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the pizza timer"
    - slots:
        - "name"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the pizza timer"
    - slots:
        - "name"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the pizza timer"
    - slots:
        - "name"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 10 minutes and 30 seconds to the pizza timer"
    # area
    - slots:
        - "area"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the kitchen timer"
    - slots:
        - "area"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the kitchen timer"
    - slots:
        - "area"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the kitchen timer"
    - slots:
        - "area"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 10 minutes and 30 seconds to the kitchen timer"
    # hours + start
    - slots:
        - "start_hours"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "add 1 hour to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "add 1 hour the 2 hours and 20 minutes and 40 seconds timer"
    # hours + minutes + start
    - slots:
        - "start_hours"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "add 1 hour and 10 minutes to the 2 hours and 20 minutes and 40 seconds timer"
    # hours + seconds + start
    - slots:
        - "start_hours"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "add 1 hour and 30 seconds to the 2 hours and 20 minutes and 40 seconds timer"
    # hours + minutes + seconds + start
    - slots:
        - "start_hours"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 1 hour  and 10 minutes and 30 seconds to the 2 hours and 20 minutes and 40 seconds timer"
    # minutes + start
    - slots:
        - "start_hours"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to my timer"
    - slots:
        - "start_minutes"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 20 minute timer"
    - slots:
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "add 10 minutes to the 2 hours and 20 minutes and 40 seconds timer"
    # minutes + seconds + start
    - slots:
        - "start_hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to my timer"
    - slots:
        - "start_minutes"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 20 minute timer"
    - slots:
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "add 10 minutes and 30 seconds to the 2 hours and 20 minutes and 40 seconds timer"
    # seconds + start
    - slots:
        - "start_hours"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to my timer"
    - slots:
        - "start_minutes"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 20 minute timer"
    - slots:
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "add 30 seconds to the 2 hours and 20 minutes and 40 seconds timer"

# -----------------------------------------------------------------------------

HassDecreaseTimer:
  supported: true
  domain: homeassistant
  description: "Removes time from a timer"
  importance: "complete"
  slots:
    hours:
      description: "Number of hours"
      required: false
    minutes:
      description: "Number of minutes"
      required: false
    seconds:
      description: "Number of seconds"
      required: false
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    - slots: "hours"
      importance: "complete"
      example: "remove 1 hour from my timer"
    - slots: "minutes"
      importance: "complete"
      example: "remove 10 minutes from my timer"
    - slots: "seconds"
      importance: "complete"
      example: "remove 30 seconds from my timer"
    - slots:
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from my timer"
    - slots:
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from my timer"
    - slots:
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from my timer"
    - slots:
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 10 minutes and 30 seconds from my timer"
    # name
    - slots:
        - "name"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the pizza timer"
    - slots:
        - "name"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the pizza timer"
    - slots:
        - "name"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the pizza timer"
    - slots:
        - "name"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the pizza timer"
    - slots:
        - "name"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 10 minutes and 30 seconds from the pizza timer"
    # area
    - slots:
        - "area"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the kitchen timer"
    - slots:
        - "area"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the kitchen timer"
    - slots:
        - "area"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the kitchen timer"
    - slots:
        - "area"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the kitchen timer"
    - slots:
        - "area"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 10 minutes and 30 seconds from the kitchen timer"
    # hours + start
    - slots:
        - "start_hours"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "remove 1 hour from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
      importance: "complete"
      example: "remove 1 hour the 2 hours and 20 minutes and 40 seconds timer"
    # hours + minutes + start
    - slots:
        - "start_hours"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
      importance: "complete"
      example: "remove 1 hour and 10 minutes from the 2 hours and 20 minutes and 40 seconds timer"
    # hours + seconds + start
    - slots:
        - "start_hours"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour and 30 seconds from the 2 hours and 20 minutes and 40 seconds timer"
    # hours + minutes + seconds + start
    - slots:
        - "start_hours"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 2 hour timer"
    - slots:
        - "start_minutes"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 10 minute timer"
    - slots:
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 30 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 1 hour  and 10 minutes and 30 seconds from the 2 hours and 20 minutes and 40 seconds timer"
    # minutes + start
    - slots:
        - "start_hours"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from my timer"
    - slots:
        - "start_minutes"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 20 minute timer"
    - slots:
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "minutes"
      importance: "complete"
      example: "remove 10 minutes from the 2 hours and 20 minutes and 40 seconds timer"
    # minutes + seconds + start
    - slots:
        - "start_hours"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from my timer"
    - slots:
        - "start_minutes"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 20 minute timer"
    - slots:
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "minutes"
        - "seconds"
      importance: "complete"
      example: "remove 10 minutes and 30 seconds from the 2 hours and 20 minutes and 40 seconds timer"
    # seconds + start
    - slots:
        - "start_hours"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from my timer"
    - slots:
        - "start_minutes"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 20 minute timer"
    - slots:
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 40 second timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 2 hours and 20 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 2 hours and 40 seconds timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 20 minutes and 40 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
        - "seconds"
      importance: "complete"
      example: "remove 30 seconds from the 2 hours and 20 minutes and 40 seconds timer"

# -----------------------------------------------------------------------------

HassPauseTimer:
  supported: true
  domain: homeassistant
  description: "Pauses a running timer"
  importance: "usable"
  slots:
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    - slots: []
      importance: "usable"
      example: "pause my timer"
    - slots: "name"
      importance: "complete"
      example: "pause the pizza timer"
    - slots: "area"
      importance: "complete"
      example: "pause the kitchen timer"
    - slots: "start_hours"
      importance: "complete"
      example: "pause the 1 hour timer"
    - slots: "start_minutes"
      importance: "complete"
      example: "pause the 10 minute timer"
    - slots: "start_seconds"
      importance: "complete"
      example: "pause the 30 second timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "pause the 10 minutes and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
      importance: "complete"
      example: "pause the 1 hour and 10 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
      importance: "complete"
      example: "pause the 1 hour and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "pause the 1 hour and 10 minutes and 30 seconds timer"

# -----------------------------------------------------------------------------

HassUnpauseTimer:
  supported: true
  domain: homeassistant
  description: "Resumes a paused timer"
  importance: "usable"
  slots:
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    - slots: []
      importance: "usable"
      example: "resume my timer"
    - slots: "name"
      importance: "complete"
      example: "resume the pizza timer"
    - slots: "area"
      importance: "complete"
      example: "resume the kitchen timer"
    - slots: "start_hours"
      importance: "complete"
      example: "resume the 1 hour timer"
    - slots: "start_minutes"
      importance: "complete"
      example: "resume the 10 minute timer"
    - slots: "start_seconds"
      importance: "complete"
      example: "resume the 30 second timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "resume the 10 minutes and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
      importance: "complete"
      example: "resume the 1 hour and 10 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
      importance: "complete"
      example: "resume the 1 hour and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "resume the 1 hour and 10 minutes and 30 seconds timer"

# -----------------------------------------------------------------------------

HassTimerStatus:
  supported: true
  domain: homeassistant
  description: "Reports status of one or more timers"
  importance: "usable"
  slots:
    start_hours:
      description: "Hours the timer was started with"
      required: false
    start_minutes:
      description: "Minutes the timer was started with"
      required: false
    start_seconds:
      description: "Seconds the timer was started with"
      required: false
    name:
      description: "Name attached to the timer"
      required: false
    area:
      description: "Area of the device used to start the timer"
      required: false
  slot_combinations:
    - slots: []
      importance: "usable"
      example: "how much time is left on my timer"
    - slots: "name"
      importance: "complete"
      example: "how much time is left on the pizza timer"
    - slots: "area"
      importance: "complete"
      example: "how much time is left on the kitchen timer"
    - slots: "start_hours"
      importance: "complete"
      example: "how much time is left on the 1 hour timer"
    - slots: "start_minutes"
      importance: "complete"
      example: "how much time is left on the 10 minute timer"
    - slots: "start_seconds"
      importance: "complete"
      example: "how much time is left on the 30 second timer"
    - slots:
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "how much time is left on the 10 minutes and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
      importance: "complete"
      example: "how much time is left on the 1 hour and 10 minutes timer"
    - slots:
        - "start_hours"
        - "start_seconds"
      importance: "complete"
      example: "how much time is left on the 1 hour and 30 seconds timer"
    - slots:
        - "start_hours"
        - "start_minutes"
        - "start_seconds"
      importance: "complete"
      example: "how much time is left on the 1 hour and 10 minutes and 30 seconds timer"
  response_variables:
    timers:
      description: >-
        List of timer objects with:
          - is_active: true if timer is running (not paused)
          - name: name of the timer (optional)
          - area: area name of the device used to start the timer (optional)
          - total_seconds_left: seconds remaining for timer
          - rounded_hours_left: hours remaining for timer (rounded)
          - rounded_minutes_left: minutes remaining for timer (rounded)
          - rounded_seconds_left: seconds remaining for timer (rounded)
          - start_hours: hours that the timer was started with
          - start_minutes: minutes that the timer was started with
          - start_seconds: seconds that the timer was started with
